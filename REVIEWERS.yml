# REVIEWERS.yml
# This file configures reviewers and assignees for different review scenarios.

# Pull Requests Configuration
pull_requests:
  # Branch-specific configurations
  branches:
    # Each key under 'branches' represents a branch pattern
    # You can use exact branch names or patterns with wildcards (*)
    
    # Configuration for the 'main' branch
    main:
      # List of teams to be assigned as reviewers
      review_teams:
        - '{{ team_name }}-reviewers'
        - '{{ team_name }}-project-owners'
        - '{{ team_name }}-release-managers'
        - '{{ team_name }}-security'
        - '{{ team_name }}-testers'
        - '{{ team_name }}-operations'

      # List of teams to be assigned as assignees
      assignees:
        - '{{ team_name }}-developers'
      # Required number of approvals to match number of required teams to approve
      required_approvals: 2
      # Required teams to approve before PR can be merged
      required_teams:
        - '{{ team_name }}-reviewers'
        - '{{ team_name }}-operations'
        # - '{{ team_name }}-release-managers'
        # - '{{ team_name }}-testers'
    # Configuration for the 'develop' branch
    develop:
      review_teams:
        - '{{ team_name }}-testers'
        - '{{ team_name }}-developers'
        - '{{ team_name }}-reviewers'
      assignees:
        - '{{ team_name }}-developers'
      required_approvals: 2
      required_teams:
        - '{{ team_name }}-reviewers'
        - '{{ team_name }}-testers'
    
    # Configuration for all branches starting with 'release/'
    "release/*":
      review_teams:
        - '{{ team_name }}-testers'
        - '{{ team_name }}-reviewers'
        - '{{ team_name }}-release-managers'
      assignees:
        - '{{ team_name }}-developers'
      required_approvals: 2
      required_teams:
        - '{{ team_name }}-reviewers'
        - '{{ team_name }}-release-managers'
    
    # Configuration for all branches starting with 'feature/'
    "feature/*":
      review_teams:
        - '{{ team_name }}-testers'
        - '{{ team_name }}-developers'
        - '{{ team_name }}-reviewers'

      assignees:
        - '{{ team_name }}-developers'
      required_approvals: 1
      required_teams:
        - '{{ team_name }}-reviewers'
        - '{{ team_name }}-testers'
      # Exclude specific branches from this configuration
      exclude:
        - "feature/do-not-assign"
    
    # Configuration for all branches starting with 'bugfix/'
    "bugfix/*":
      review_teams:
        - '{{ team_name }}-release-managers'
        - '{{ team_name }}-project-owners'

      assignees:
        - '{{ team_name }}-developers'
      required_approvals: 2
      required_teams:
        - '{{ team_name }}-reviewers'
        - '{{ team_name }}-project-owners'
      exclude:
        - "bugfix/ISSUE-do-not-assign"

    # Configuration for all branches starting with 'hotfix/'
    "hotfix/*":
      review_teams:
        - '{{ team_name }}-release-managers'
        - '{{ team_name }}-project-owners'
      required_approvals: 2
      required_teams:
        - '{{ team_name }}-reviewers'
        - '{{ team_name }}-project-owners'
      assignees:
        - '{{ team_name }}-developers'

# Available options for each branch configuration:
# - review_teams: List of GitHub team names to be assigned as reviewers (not used in current config)
# - assignees: List of GitHub usernames to be assigned as assignees. This ist will be taken from the team removing the creator
# - exclude: List of specific branch names to be excluded from the configuration

# Notes:
# 1. The PR creator will automatically be filtered out from the reviewers list.
# 2. Branch patterns support wildcards (*) for matching multiple branches.
# 3. More specific branch patterns take precedence over general ones.
# 4. The 'exclude' option allows you to exempt specific branches from a general pattern.
